{
  "name": "TikTok Shop Affiliate UGC Generator",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "0 10 * * *"
            }
          ]
        }
      },
      "id": "7021257a-39f9-45b0-a0ba-9bb800a02961",
      "name": "Schedule - Daily Run",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1,
      "position": [
        -1056,
        -272
      ]
    },
    {
      "parameters": {
        "authentication": "serviceAccount",
        "resource": "spreadsheet",
        "sheetsUi": {
          "sheetValues": [
            {
              "title": "Prepare a data table or Google Sheet with sample..."
            }
          ]
        },
        "options": {}
      },
      "id": "355a5082-2602-4b20-9dd8-d5e5740d6286",
      "name": "Google Sheets - Product Catalog Ingest",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 3,
      "position": [
        -832,
        -272
      ],
      "retryOnFail": false,
      "executeOnce": false,
      "alwaysOutputData": false,
      "notesInFlow": true,
      "credentials": {
        "googleApi": {
          "id": "auhOEidPcyOicG1Y",
          "name": "Google Sheets account"
        }
      },
      "onError": "continueRegularOutput",
      "notes": "Workflow Input\tExpected Output\tActual Output\t\n[1, 2, 3]\t6\t\t\n[10, 20]\t30\t\t\n[5]\t5\t\t\n[]\t0\t\t\n[-1, -2, -3]\t-6\t\t\n[1, -1, 2, -2]\t0\t\t\n[1.5, 2.5]\t4\t\t\n['a', 'b', 'c']\tError: Input must be a list of numbers.\t\t\nnull\tError: Input cannot be null.\t\t\n[1, 2, '3']\tError: All elements must be numbers.\t\t"
    },
    {
      "parameters": {
        "batchSize": 10,
        "options": {}
      },
      "id": "1c509cd7-edff-4994-bc2b-5d793f544448",
      "name": "Split in Batches (Scale)",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -608,
        -272
      ]
    },
    {
      "parameters": {},
      "id": "6edac35a-8ab0-41af-9817-853a761b3b7e",
      "name": "Google Search - Fetch Viral Trends",
      "type": "n8n-nodes-base.googleSearch",
      "typeVersion": 1,
      "position": [
        -384,
        -384
      ]
    },
    {
      "parameters": {
        "functionCode": "const product = items[0].json;\nconst trends = items[1].json.results.map(r => r.snippet).join('; ');\n\nconst systemPrompt = \"You are a world-class TikTok UGC scriptwriter specializing in high-conversion affiliate content. Your tone must be authentic, spontaneous, and conversational, like a real influencer. The script must be less than 60 seconds (max 150 words) and integrate the product naturally into the trend. Output ONLY the raw script text, no greetings or explanations. Use modern Gen Z slang. Do not use hashtags.\";\n\nconst userQuery = `Write a high-converting TikTok script for this product: ${product.ProductName}. Key benefit: ${product.KeyBenefit}. Current viral trends to use: ${trends}. The final output must only contain the raw script.`;\n\nconst apiKey = \"\";\nconst apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${apiKey}`;\n\n// Retry logic using exponential backoff\nasync function generateScriptWithRetry(payload) {\n    let delay = 1000; // 1 second\n    const maxRetries = 5;\n    for (let i = 0; i < maxRetries; i++) {\n        try {\n            const response = await fetch(apiUrl, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(payload)\n            });\n\n            if (response.status === 429) { // Too Many Requests\n                if (i < maxRetries - 1) {\n                    console.log(`Rate limit exceeded. Retrying in ${delay / 1000}s...`);\n                    await new Promise(resolve => setTimeout(resolve, delay));\n                    delay *= 2; // Exponential backoff\n                    continue;\n                } else {\n                    throw new Error(\"Max retries exceeded for script generation.\");\n                }\n            }\n\n            if (!response.ok) {\n                throw new Error(`API call failed with status: ${response.status}`);\n            }\n\n            const result = await response.json();\n            const text = result.candidates?.[0]?.content?.parts?.[0]?.text;\n\n            if (text) {\n                // Add the generated script and product data to the item\n                product.generatedScript = text.trim();\n                return [{ json: product }];\n            } else {\n                throw new Error(\"API response missing generated text.\");\n            }\n        } catch (error) {\n            console.error(\"Error during script generation attempt:\", error.message);\n            if (i === maxRetries - 1) throw error; // Re-throw on final failure\n        }\n    }\n}\n\nconst payload = {\n    contents: [{ parts: [{ text: userQuery }] }],\n    systemInstruction: { parts: [{ text: systemPrompt }] },\n};\n\nreturn generateScriptWithRetry(payload);\n"
      },
      "id": "ab1e11f1-b471-47ba-bb6e-246aa84745de",
      "name": "Function - Gemini Script Generator (UGC Style)",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        -384,
        -176
      ]
    },
    {
      "parameters": {
        "url": "https://api.heygen-or-synthesia.com/v1/video/generate",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "script",
              "value": "={{$json.generatedScript}}"
            },
            {
              "name": "avatar_model_id",
              "value": "hyper_realistic_model_a"
            },
            {
              "name": "product_image_url",
              "value": "={{$json.ProductImageURL}}"
            }
          ]
        },
        "options": {}
      },
      "id": "721a1fdf-c3dd-4af5-8453-3f65b0691aa8",
      "name": "HTTP Request - HeyGen Video Generation (Hyper-Realistic)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        -160,
        -176
      ]
    },
    {
      "parameters": {
        "amount": 10,
        "unit": "minutes"
      },
      "id": "7f5b7d4e-5fc7-42f5-bf6c-9f890d6ba33a",
      "name": "Wait - For Video Generation",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1,
      "position": [
        64,
        -176
      ],
      "webhookId": "4167b74c-714d-46f9-9732-b3ea75e712fa"
    },
    {
      "parameters": {
        "text": "QC REQUIRED: New Video for {{$json.ProductName}}. CHECK AVATAR REALISM BEFORE APPROVAL. Video URL: {{$json.video_url}}",
        "otherOptions": {}
      },
      "id": "f428f8bd-9416-4c61-8a9c-5f000e4be973",
      "name": "Slack - Post QC Approval Request",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2,
      "position": [
        272,
        -176
      ],
      "webhookId": "806c10f2-dbad-4558-94c2-85b8f819a0ee"
    },
    {
      "parameters": {},
      "id": "15f18bca-0dfd-46b6-852c-a6b5ff74a3b2",
      "name": "Approval Waiter (QC Gate)",
      "type": "n8n-nodes-base.approval",
      "typeVersion": 1,
      "position": [
        496,
        -176
      ]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{$json.approved}}",
              "value2": true
            }
          ]
        }
      },
      "id": "99d1acf7-3972-4dfe-9ff8-0447963bf07b",
      "name": "IF - QC Approved (Hyper-Realistic)",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        720,
        -176
      ]
    },
    {
      "parameters": {
        "url": "https://api.tiktok.com/v1/video/upload",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "video_url",
              "value": "={{$json.video_url}}"
            },
            {
              "name": "caption",
              "value": "Check out this {{$json.ProductName}}! #TikTokShop #Affiliate #{{$json.Category}}"
            },
            {
              "name": "is_ugc",
              "value": "true"
            }
          ]
        },
        "options": {}
      },
      "id": "132b3cbb-78c3-4417-b3eb-bda7fd1ba8b7",
      "name": "HTTP Request - TikTok Post (Final Deliverable)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        944,
        -272
      ]
    },
    {
      "parameters": {
        "content": "## HUMAN QC GATE\n\nThis is the critical step to prevent 'Uncanny Valley' failures. The video URL is posted to Slack, requiring human approval before the TikTok Post node is ever reached. This ensures *only* hyper-realistic videos are published."
      },
      "id": "467f3253-fab8-42a3-8610-accd72ad9c3d",
      "name": "Critical QC Gate",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        480,
        -368
      ]
    },
    {
      "parameters": {
        "content": "## AI-Powered Scripting\n\nUses the Gemini API (via HTTP Request in this flow) to generate a high-conversion, UGC-style script based on the current top viral trends."
      },
      "id": "60b6d322-6e2a-4bbf-b8e8-c6d8674a54a8",
      "name": "AI Scripting Layer",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -448,
        0
      ]
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "mode": "list",
          "value": ""
        },
        "sheetName": {
          "__rl": true,
          "mode": "list",
          "value": ""
        }
      },
      "id": "fa5a40f9-3b0f-48d7-af92-40284bad342a",
      "name": "Google Sheets - Log Published Content",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 3,
      "position": [
        1152,
        -272
      ]
    }
  ],
  "connections": {
    "Schedule - Daily Run": {
      "main": [
        [
          {
            "node": "Google Sheets - Product Catalog Ingest",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets - Product Catalog Ingest": {
      "main": [
        [
          {
            "node": "Split in Batches (Scale)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split in Batches (Scale)": {
      "main": [
        [
          {
            "node": "Function - Gemini Script Generator (UGC Style)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Function - Gemini Script Generator (UGC Style)": {
      "main": [
        [
          {
            "node": "HTTP Request - HeyGen Video Generation (Hyper-Realistic)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request - HeyGen Video Generation (Hyper-Realistic)": {
      "main": [
        [
          {
            "node": "Wait - For Video Generation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait - For Video Generation": {
      "main": [
        [
          {
            "node": "Slack - Post QC Approval Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF - QC Approved (Hyper-Realistic)": {
      "main": [
        [
          {
            "node": "HTTP Request - TikTok Post (Final Deliverable)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request - TikTok Post (Final Deliverable)": {
      "main": [
        [
          {
            "node": "Google Sheets - Log Published Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "pinData": {},
  "triggerCount": 0,
  "meta": {
    "templateCredsSetupCompleted": true
  }
}