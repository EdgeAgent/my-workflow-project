{
  "name": "Scrape New Competitors",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "weeks"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        800,
        48
      ],
      "id": "495c7ad2-69d3-4a24-91f1-329db612c537",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "14CQCapnl_8vTbJXk7oxLL27PVBs3VnQ90dRwtJ8OVsg",
          "mode": "list",
          "cachedResultName": "Google Competitor Analysis",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/14CQCapnl_8vTbJXk7oxLL27PVBs3VnQ90dRwtJ8OVsg/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Parameters",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/14CQCapnl_8vTbJXk7oxLL27PVBs3VnQ90dRwtJ8OVsg/edit#gid=0"
        },
        "combineFilters": "OR",
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        992,
        48
      ],
      "id": "fa2694d5-4864-407f-8aea-7043473fcfd9",
      "name": "Parameters"
    },
    {
      "parameters": {
        "url": "https://api.scrapingdog.com/google",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpQueryAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "query",
              "value": "=Top 5 \"{{ $json.Value[0] }}\" in {{ new Date().getFullYear() }}"
            },
            {
              "name": "page",
              "value": "0"
            },
            {
              "name": "country",
              "value": "us"
            },
            {
              "name": "results",
              "value": "10"
            },
            {
              "name": "advance_search",
              "value": "false"
            },
            {
              "name": "ai_overview",
              "value": "false"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1424,
        48
      ],
      "id": "68d82f2c-4556-4633-8214-e7ec236f1e1d",
      "name": "Google Search"
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "Parameters"
            },
            {
              "fieldToAggregate": "Value"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1200,
        48
      ],
      "id": "8f2253ab-9330-41ce-96e3-217374bda6d6",
      "name": "Aggregate"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-nano",
          "mode": "list",
          "cachedResultName": "gpt-4.1-nano"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1808,
        256
      ],
      "id": "b06ce55a-70e2-41fa-82c0-c939fc748719",
      "name": "4.1"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"title\": \"[post title here]\",\n  \"description\": \"[post description here]\",\n  \"link\": \"[post link here]\",\n  \"score\": 30\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        2064,
        224
      ],
      "id": "d32831be-77e8-407e-96f0-cfa12a06989c",
      "name": "Search Array"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Search Query -\n{{ $('Google Search').item.json.search_information.query_displayed }}\n\nGoogle Search Result -\nTitle: {{ $json.title }}\nDescription: {{ $json.snippet }}\nLink: {{ $json.link }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=You are a topic search expert, you will be provided with search result from google with the search query. You are requried to identify if search result matches the user's query. You must rank the result with a score from 100.\n\nInstructions -\n1. You MUST ignore top [number] when giving results. For example, search query might ask Top 5, but result may have Top 7 or Top 10. So you should not judge based on it.\n2. You MUST rank the search result with a score from 100 based on how relevant it looks according to the search query.\n3. You MUST return in a JSON format.\n4. MUST follow the exact output example\n\nOutput Example - \n```json\n  {\n    \"title\": \"[post title here]\",\n    \"description\": \"[post description here]\",\n    \"link\": \"[post link here]\",\n    \"score\": [relevance score from 100 in integer]\n  }\n```"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        1840,
        48
      ],
      "id": "33413526-dcdc-4410-9ca0-6d59acff16fd",
      "name": "Search Agent"
    },
    {
      "parameters": {
        "fieldToSplitOut": "organic_results",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        1648,
        48
      ],
      "id": "5d2098e3-08dd-454e-9698-84f0507a2da3",
      "name": "Split Out"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5d8e65b4-3619-4c28-aaf0-6334684c7e42",
              "leftValue": "={{ $json.output.score }}",
              "rightValue": 75,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        2208,
        48
      ],
      "id": "8e101200-32d1-4c8f-bc36-bb9abdcc9f68",
      "name": "Filter"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        800,
        768
      ],
      "id": "b2bf936c-8a0d-4b44-bb24-b6d3d5df51c0",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "url": "https://api.scrapingdog.com/scrape",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpQueryAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "url",
              "value": "={{ $json.output.link }}"
            },
            {
              "name": "dynamic",
              "value": "false"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1024,
        912
      ],
      "id": "d70982a0-a9ee-4c6d-b690-c61424ae377e",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "jsCode": "try {\n  const html = $input.first().json.data;\n  const bodyMatch = html.match(/<body[^>]*>([\\s\\S]*?)<\\/body>/i);\n  if (bodyMatch && bodyMatch[1]) {\n    return { body: bodyMatch[1].replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi, '') };\n  }\n  return { body: html };\n} catch (error) {\n  return { body: $input.first().json.data };\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1248,
        912
      ],
      "id": "708217d2-8221-41c0-9b5d-c2be146c34a2",
      "name": "Relevant Text"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Please find and give me what are top {{ $('Aggregate').item.json.Value[0] }} from the html dump of a website with URL: {{ $('Filter').item.json.output.link }} is below - \n\n{{ $json.body }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=- MUST return an array with all the product names and product website link\n- product website link should only be domain name, without subdomain and path. Like example.com and not like www.example.com/docs/best\n- product website should be the link of one the product in top list. It should not be the name of the website blog owner.\n- MUST call delay wait tool before processing each request\n\nYou must return in below format -\n```json\n[\n  {\n    \"product name\": \"[name of product here]\",\n    \"product link\": \"[link to the product here]\"\n  }\n]\n```"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        1472,
        912
      ],
      "id": "eb90ed95-f3dd-448f-af01-18750b91cede",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "jsonSchemaExample": "[\n  {\n    \"product name\": \"[name of product here]\",\n    \"product link\": \"[link to the product here]\"\n  }\n]"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        1760,
        1136
      ],
      "id": "5ae3a84c-925d-4b26-ad80-917404af0519",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "fieldToSplitOut": "output",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        1840,
        912
      ],
      "id": "7f74964d-8176-4cbd-bd48-68482f75bb68",
      "name": "Split Out1"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "14CQCapnl_8vTbJXk7oxLL27PVBs3VnQ90dRwtJ8OVsg",
          "mode": "list",
          "cachedResultName": "Google Competitor Analysis",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/14CQCapnl_8vTbJXk7oxLL27PVBs3VnQ90dRwtJ8OVsg/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1257962632,
          "mode": "list",
          "cachedResultName": "Competitors",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/14CQCapnl_8vTbJXk7oxLL27PVBs3VnQ90dRwtJ8OVsg/edit#gid=1257962632"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "Domain",
              "lookupValue": "={{ $json['product link'] }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        2640,
        1136
      ],
      "id": "57907e36-e9d5-423c-bc9c-fd9ab3d6cf8c",
      "name": "Existing Info",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.row_number }}",
                    "rightValue": "",
                    "operator": {
                      "type": "number",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "id": "c2cf8e52-4930-4330-a49e-e2d5fb290d20"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Exists"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "54c09039-c482-4255-ba39-d946953267ec",
                    "leftValue": "={{ $json.row_number }}",
                    "rightValue": "",
                    "operator": {
                      "type": "number",
                      "operation": "notExists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "New"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        2304,
        1376
      ],
      "id": "a5afae07-fea3-4daf-8e24-d17c5f56c249",
      "name": "Switch"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        2208,
        1104
      ],
      "id": "aa859dca-91c9-4ab1-885b-ca4fe6f0209b",
      "name": "Loop Products"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e6a312c3-d6c9-4b46-ad60-81e781a03554",
              "name": "product name",
              "value": "={{ $json['product name'] }}",
              "type": "string"
            },
            {
              "id": "7b77ed81-c9ed-49fe-acb0-7f909a33e1ff",
              "name": "product link",
              "value": "={{ $json['product link'] }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2432,
        1136
      ],
      "id": "a3112adc-ed00-4a40-a886-9edcf2deef10",
      "name": "Set Product"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "14CQCapnl_8vTbJXk7oxLL27PVBs3VnQ90dRwtJ8OVsg",
          "mode": "list",
          "cachedResultName": "Google Competitor Analysis",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/14CQCapnl_8vTbJXk7oxLL27PVBs3VnQ90dRwtJ8OVsg/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1257962632,
          "mode": "list",
          "cachedResultName": "Competitors",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/14CQCapnl_8vTbJXk7oxLL27PVBs3VnQ90dRwtJ8OVsg/edit#gid=1257962632"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Domain": "={{ $('Loop Products').item.json['product link'] }}",
            "Product Name": "={{ $('Split Out1').item.json['product name'] }}",
            "Date Added": "={{ new Date().toLocaleDateString('en-GB').split('/').join('-') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Domain",
              "displayName": "Domain",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Product Name",
              "displayName": "Product Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Date Added",
              "displayName": "Date Added",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        2512,
        1392
      ],
      "id": "9e19fd78-027c-4065-a21c-26191c26953c",
      "name": "Add Product"
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "Date Added"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1024,
        608
      ],
      "id": "7f313473-2136-4799-a0bf-28df56e86fe0",
      "name": "Aggregate1"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "14CQCapnl_8vTbJXk7oxLL27PVBs3VnQ90dRwtJ8OVsg",
          "mode": "list",
          "cachedResultName": "Google Competitor Analysis",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/14CQCapnl_8vTbJXk7oxLL27PVBs3VnQ90dRwtJ8OVsg/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1257962632,
          "mode": "list",
          "cachedResultName": "Competitors",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/14CQCapnl_8vTbJXk7oxLL27PVBs3VnQ90dRwtJ8OVsg/edit#gid=1257962632"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "Date Added",
              "lookupValue": "={{ new Date().toLocaleDateString('en-GB').split('/').join('-') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        1248,
        608
      ],
      "id": "8f610bbb-75e7-4128-9038-12f152306e72",
      "name": "New Count",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "row_number"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1552,
        608
      ],
      "id": "bd86f3ba-25a0-4ffa-8eec-d12a75ff1cd8",
      "name": "Aggregate2"
    },
    {
      "parameters": {
        "content": "## Search Google\n- Takes search parameters from Google Sheet\n- Performs a SERP scraping\n\n## Setup\n1. Create Scrapingdog account - [here](https://www.architjn.com/r/sdog)\n2. Create Scrapingdog API Key - [Tutorial](https://x.com/search?q=from%3Aarchitjn%20%22n8n%20Basics%22%20%22ScrapingDog%20API%22&src=typed_query&f=top)",
        "height": 540,
        "width": 840,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        720,
        -176
      ],
      "typeVersion": 1,
      "id": "acf0da9a-14a2-4424-8e5c-5af5d4bcd21b",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## Search Agent\n- Gives score to each result according to relevance\n- Keeps only above 75 out of 100",
        "height": 540,
        "width": 820,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1584,
        -176
      ],
      "typeVersion": 1,
      "id": "3f1ea3ab-40f4-44f5-9d00-ea757b251d18",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "",
        "height": 1240,
        "width": 2140,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        720,
        384
      ],
      "typeVersion": 1,
      "id": "9b82c9ec-49a2-4e81-91a4-f4820ac904f0",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "",
        "height": 340,
        "width": 1160,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        928,
        464
      ],
      "typeVersion": 1,
      "id": "155c4dbc-a9f9-4f61-8cac-39cf3783fbba",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "",
        "height": 460,
        "width": 1160,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        928,
        832
      ],
      "typeVersion": 1,
      "id": "dcb9391c-01d5-46fc-8cac-b622529a14c0",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "",
        "height": 700,
        "width": 720,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2128,
        912
      ],
      "typeVersion": 1,
      "id": "9fd13924-70e8-4661-a677-4f133c1be743",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "content": "## Gets Top Competitors\n- Find products from top lists\n- Check If already added, if not add new\n- Alert User daily if new competitor found\n\n## Setup\n- Google Sheet - [Tutorial](https://x.com/search?q=from%3Aarchitjn%20%22n8n%20Basics%22%20%22Google%20Sheets%22&src=typed_query&f=top)\n- Telegram - [Tutorial](https://x.com/search?q=from%3Aarchitjn%20%22n8n%20Basics%22%20%22Telegram%22&src=typed_query&f=top)\n- Create Scrapingdog account - [here](https://www.architjn.com/r/sdog)\n- Create Scrapingdog API Key - [Tutorial](https://x.com/search?q=from%3Aarchitjn%20%22n8n%20Basics%22%20%22ScrapingDog%20API%22&src=typed_query&f=top)\n",
        "height": 420,
        "width": 720
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2128,
        464
      ],
      "typeVersion": 1,
      "id": "7b10f77e-f412-4c90-ac33-a278c2b53a4a",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "chatId": "6771012698",
        "text": "={{ $json.row_number.isEmpty() ? \"No new competitors found today\": `${$json.row_number.length} new competitors found` }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1840,
        608
      ],
      "id": "74d0f3e3-ecf3-48b2-9e70-613b94731407",
      "name": "Alert User",
      "webhookId": "a30ee149-4b07-4896-8d42-9afcd494e4d7"
    },
    {
      "parameters": {
        "description": "Call this tool to add wait between calling AI Models, this tool gives 4000ms delay.",
        "jsCode": "const waitTime = $input.first().json.waitTime || 10000;\ntry {\n  await new Promise(resolve => setTimeout(resolve, waitTime));\n  return 'Wait completed';\n} catch (error) {\n  return \"Error during wait\";\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.toolCode",
      "typeVersion": 1.2,
      "position": [
        1648,
        1136
      ],
      "id": "31b19d1a-6232-46d2-a425-2634c16b33ea",
      "name": "Delay Wait"
    },
    {
      "parameters": {
        "model": "openai/gpt-4.1-nano",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        1424,
        1136
      ],
      "id": "422d80af-d7f4-4a5d-b26e-06eca11b30c5",
      "name": "aAI 4.1"
    }
  ],
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Parameters",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parameters": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Google Search",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Search": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "4.1": {
      "ai_languageModel": [
        [
          {
            "node": "Search Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Search Array": {
      "ai_outputParser": [
        [
          {
            "node": "Search Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Search Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Search Agent": {
      "main": [
        [
          {
            "node": "Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Aggregate1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Relevant Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Relevant Text": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Split Out1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Split Out1": {
      "main": [
        [
          {
            "node": "Loop Products",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Existing Info": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Loop Products",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Add Product",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Products": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set Product",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Product": {
      "main": [
        [
          {
            "node": "Existing Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add Product": {
      "main": [
        [
          {
            "node": "Loop Products",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate1": {
      "main": [
        [
          {
            "node": "New Count",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "New Count": {
      "main": [
        [
          {
            "node": "Aggregate2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate2": {
      "main": [
        [
          {
            "node": "Alert User",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delay Wait": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "aAI 4.1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "pinData": {},
  "triggerCount": 0,
  "meta": null
}